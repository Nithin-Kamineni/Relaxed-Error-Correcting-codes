import random
import galois
import numpy as np
import pulp as pl
import time
import math
from collections.abc import Iterable
from typing import Dict, Any, List, Tuple
from collections import Counter
from utils.make_list import make_list
from utils.synthesize_from_distribution import synthesize_from_distribution
from utils.convert_to_binary import convert_to_binary
from utils.messageSliceBasedOnChunkSize import messageSliceBasedOnChunkSize
from utils.reconstruct_numbers_from_chunks import reconstruct_numbers_from_chunks
# from utils.convert_to_binary import convert_to_binary
# from utils.convert_to_binary import convert_to_binary
# from utils.convert_to_binary import convert_to_binary


from implementations.ParityOverwriteByTopWeightsEncode import ParityOverwriteByTopWeightsEncode
from implementations.OptimizedParityFittingWeightsEncodeAndDecode import OptimizedParityFittingWeightsEncodeAndDecode
# from implementations.ParityOverwriteByTopWeightsEncode import ParityOverwriteByTopWeightsEncode
# from implementations.ParityOverwriteByTopWeightsEncode import ParityOverwriteByTopWeightsEncode

# y-axis: distortion (0..5) "per weight"
distorsionMap = {
    63: {
        1: None, 2: None, 3: None, 4: None, 
        5: None, 6: None, 7: None, 8: None
    },
    127: {
        4: None, 5: None, 6: None, 7: None, 8: None,
        9: None, 10: None, 11: None, 12: None
    },
    255: {
        8: None, 9: None, 10: None, 11: None, 12: None,
        13: None, 14: None, 15: None, 16: None
    }
}

# y-axis: time (seconds) "per weight"
durationsMap = {
    63: {
        1: None, 2: None, 3: None, 4: None, 
        5: None, 6: None, 7: None, 8: None
    },
    127: {
        4: None, 5: None, 6: None, 7: None, 8: None,
        9: None, 10: None, 11: None, 12: None
    },
    255: {
        8: None, 9: None, 10: None, 11: None, 12: None,
        13: None, 14: None, 15: None, 16: None
    }
}

NandTvaluesToKvalues = {
    63 : {
        1 : 57, 2: 51, 3: 45, 4: 39, 5: 36, 6: 30,  7: 24,  8: 18
    },
    127 : {
        4 : 99, 5: 92, 6: 85, 7: 78, 8: 71, 9: 71, 10: 64, 11: 57, 12: 50
    },
    255 : {
        8 : 191, 9: 187, 10: 179, 11: 171, 12: 163, 13: 155, 14: 147, 15: 139, 16: 131
    }
}

# message_parity_size=63
# message_size = 39

# message_parity_size=127
# message_size = 99

# message_parity_size=255
# message_size = 131

samples_lst = [
    [126, 139, 130, 127, 131, 128, 127, 130, 125, 110, 95, 115, 116, 158, 129, 125, 126, 112, 130, 110, 140, 128, 150, 131, 81, 125, 181, 124, 113, 130, 126, 124, 127, 119, 136, 126, 135, 132, 127, 139, 123, 149, 129, 154, 125, 133, 126, 128, 126, 120, 125, 130, 127, 137, 219, 161, 141, 135, 90, 123, 137, 131, 120], [88, 112, 143, 172, 138, 128, 134, 132, 125, 115, 120, 128, 125, 125, 144, 126, 134, 119, 124, 205, 131, 124, 121, 151, 127, 136, 119, 137, 158, 122, 123, 132, 133, 141, 111, 114, 95, 127, 137, 127, 103, 123, 144, 128, 129, 115, 62, 124, 145, 130, 139, 180, 149, 92, 132, 102, 116, 179, 134, 125, 131, 116, 146], [216, 124, 136, 131, 134, 142, 134, 130, 124, 119, 156, 132, 110, 183, 158, 131, 121, 133, 119, 124, 133, 119, 78, 127, 98, 175, 105, 109, 135, 142, 109, 129, 124, 146, 58, 117, 135, 126, 81, 125, 134, 134, 112, 169, 100, 89, 153, 131, 92, 205, 129, 131, 141, 78, 142, 203, 124, 107, 137, 131, 125, 101, 162], [153, 86, 130, 128, 138, 124, 105, 137, 139, 130, 157, 149, 138, 134, 127, 129, 120, 120, 142, 160, 130, 130, 133, 133, 135, 126, 115, 130, 134, 130, 134, 132, 128, 93, 62, 122, 120, 128, 118, 125, 133, 126, 129, 118, 131, 124, 121, 155, 133, 78, 114, 126, 115, 125, 144, 131, 126, 131, 119, 120, 146, 117, 136], [115, 134, 130, 181, 73, 132, 127, 134, 120, 133, 125, 90, 157, 130, 114, 129, 169, 125, 135, 142, 120, 138, 143, 134, 144, 133, 124, 142, 140, 117, 108, 126, 124, 130, 136, 146, 132, 112, 129, 135, 183, 114, 125, 133, 126, 124, 121, 119, 93, 126, 129, 132, 114, 166, 130, 132, 117, 137, 136, 144, 139, 139, 92], [122, 149, 138, 96, 126, 164, 128, 117, 115, 130, 101, 105, 127, 129, 114, 131, 130, 124, 125, 134, 161, 146, 108, 98, 104, 152, 112, 123, 125, 131, 122, 131, 129, 125, 85, 159, 62, 148, 115, 140, 139, 122, 136, 130, 139, 155, 152, 118, 139, 122, 92, 164, 134, 120, 134, 92, 126, 143, 127, 151, 119, 124, 131], [124, 130, 136, 136, 136, 135, 136, 105, 172, 128, 124, 116, 128, 124, 137, 130, 131, 152, 126, 128, 183, 137, 146, 116, 130, 105, 131, 159, 127, 124, 122, 142, 114, 90, 143, 136, 110, 121, 128, 125, 145, 109, 121, 132, 78, 132, 124, 116, 118, 124, 131, 120, 127, 143, 129, 187, 149, 139, 127, 135, 236, 133, 138], [107, 155, 139, 153, 162, 102, 144, 133, 140, 117, 121, 139, 92, 124, 151, 129, 197, 131, 172, 130, 135, 149, 128, 137, 141, 132, 169, 126, 132, 188, 121, 128, 107, 140, 118, 126, 142, 116, 100, 128, 120, 71, 114, 218, 137, 126, 124, 130, 127, 119, 122, 128, 114, 134, 126, 151, 112, 221, 127, 124, 117, 111, 125], [130, 106, 165, 135, 137, 121, 178, 128, 167, 130, 169, 132, 127, 134, 141, 126, 121, 131, 126, 160, 126, 139, 62, 130, 142, 130, 122, 101, 155, 126, 195, 75, 122, 119, 170, 124, 134, 139, 136, 179, 112, 103, 116, 125, 127, 158, 125, 132, 111, 132, 126, 135, 116, 153, 137, 149, 166, 121, 102, 136, 104, 124, 181], [138, 136, 128, 134, 129, 121, 132, 157, 111, 141, 134, 122, 121, 105, 122, 196, 132, 133, 114, 113, 126, 112, 138, 127, 128, 122, 136, 125, 131, 149, 131, 126, 114, 138, 99, 149, 191, 100, 131, 141, 215, 157, 129, 133, 122, 171, 134, 132, 115, 145, 124, 169, 85, 134, 128, 123, 127, 123, 119, 131, 115, 96, 134], [116, 113, 125, 54, 124, 137, 131, 136, 126, 109, 121, 130, 131, 121, 136, 92, 132, 126, 62, 136, 138, 137, 137, 125, 139, 134, 102, 145, 119, 118, 166, 28, 111, 133, 132, 63, 137, 124, 97, 145, 141, 128, 128, 144, 153, 178, 142, 62, 121, 139, 109, 121, 126, 122, 126, 115, 113, 136, 86, 126, 105, 120, 156], [119, 137, 138, 111, 131, 132, 137, 137, 124, 133, 129, 137, 100, 142, 148, 153, 135, 119, 134, 131, 117, 142, 130, 173, 132, 131, 104, 151, 107, 116, 116, 121, 129, 132, 135, 132, 129, 128, 146, 120, 113, 137, 143, 115, 130, 139, 131, 125, 125, 100, 92, 141, 126, 135, 130, 141, 118, 145, 131, 127, 129, 141, 109], [128, 134, 127, 136, 130, 90, 131, 151, 90, 126, 143, 129, 131, 130, 124, 137, 126, 125, 115, 128, 127, 132, 134, 113, 152, 79, 124, 122, 124, 131, 122, 106, 132, 129, 130, 124, 124, 131, 124, 116, 134, 183, 113, 125, 121, 120, 127, 132, 122, 125, 112, 112, 119, 125, 135, 110, 136, 128, 121, 133, 78, 68, 137], [124, 143, 133, 104, 111, 142, 172, 114, 188, 125, 137, 127, 166, 125, 130, 148, 137, 118, 116, 145, 128, 85, 126, 73, 124, 115, 93, 138, 132, 114, 112, 170, 114, 183, 115, 149, 121, 128, 135, 105, 129, 145, 132, 129, 111, 121, 95, 125, 139, 129, 54, 124, 161, 135, 108, 133, 125, 127, 133, 182, 129, 128, 134], [203, 136, 116, 130, 150, 123, 121, 126, 120, 120, 103, 130, 131, 146, 189, 126, 131, 121, 129, 124, 129, 130, 136, 114, 170, 125, 145, 152, 123, 93, 141, 138, 135, 214, 209, 86, 123, 149, 127, 112, 137, 140, 121, 131, 109, 131, 119, 132, 142, 122, 139, 131, 106, 129, 126, 134, 167, 104, 123, 111, 122, 113, 116], [115, 151, 105, 107, 125, 90, 130, 131, 131, 123, 131, 132, 119, 92, 122, 136, 126, 130, 139, 132, 126, 95, 121, 102, 115, 136, 110, 135, 119, 120, 123, 134, 101, 128, 157, 105, 217, 115, 119, 136, 108, 131, 120, 112, 115, 137, 139, 124, 130, 124, 131, 131, 130, 143, 132, 137, 147, 131, 119, 131, 124, 185, 136], [113, 100, 123, 133, 127, 127, 121, 101, 129, 104, 100, 122, 133, 121, 123, 120, 135, 125, 125, 122, 116, 135, 138, 138, 130, 134, 170, 125, 136, 127, 128, 128, 141, 134, 133, 126, 117, 122, 131, 127, 109, 139, 125, 128, 119, 141, 127, 125, 123, 182, 114, 103, 85, 109, 118, 136, 135, 130, 114, 128, 116, 78, 122], [141, 121, 129, 170, 131, 127, 129, 131, 125, 126, 167, 125, 124, 126, 133, 137, 132, 136, 125, 166, 94, 127, 119, 108, 127, 116, 140, 146, 126, 160, 130, 94, 103, 129, 125, 131, 103, 134, 151, 130, 125, 131, 134, 121, 131, 119, 131, 126, 130, 125, 132, 142, 85, 131, 127, 135, 149, 160, 98, 120, 125, 133, 128], [128, 95, 134, 153, 121, 127, 105, 132, 138, 131, 125, 130, 135, 131, 88, 131, 121, 129, 138, 91, 124, 125, 136, 126, 129, 136, 130, 130, 218, 128, 134, 116, 124, 132, 170, 126, 136, 172, 127, 114, 132, 141, 104, 129, 176, 136, 141, 108, 128, 162, 121, 122, 113, 125, 126, 130, 124, 138, 120, 143, 134, 111, 115], [126, 172, 129, 115, 130, 116, 120, 116, 135, 121, 136, 119, 120, 118, 49, 129, 120, 133, 166, 148, 112, 138, 129, 104, 128, 133, 131, 121, 121, 118, 108, 126, 130, 103, 136, 129, 167, 101, 114, 153, 120, 190, 128, 131, 114, 133, 119, 100, 133, 134, 129, 113, 175, 136, 129, 135, 131, 182, 120, 123, 129, 118, 108], [216, 195, 134, 125, 130, 126, 124, 124, 135, 105, 135, 107, 127, 128, 125, 132, 128, 112, 117, 131, 120, 132, 128, 112, 175, 132, 120, 123, 130, 101, 129, 114, 126, 140, 135, 124, 72, 157, 128, 121, 176, 113, 143, 174, 141, 140, 134, 151, 126, 179, 130, 136, 124, 153, 139, 122, 112, 136, 115, 135, 188, 126, 131], [128, 132, 129, 139, 142, 165, 172, 130, 181, 139, 134, 188, 124, 146, 156, 119, 75, 131, 122, 129, 209, 126, 136, 138, 155, 103, 139, 125, 137, 218, 121, 134, 149, 124, 101, 136, 131, 124, 195, 134, 109, 116, 138, 122, 124, 137, 128, 153, 125, 131, 120, 92, 51, 124, 196, 143, 127, 101, 89, 143, 128, 131, 107], [124, 218, 116, 133, 136, 121, 130, 120, 129, 111, 121, 202, 136, 138, 129, 145, 130, 112, 122, 130, 136, 139, 110, 94, 119, 120, 137, 131, 125, 124, 85, 123, 108, 138, 121, 128, 129, 129, 132, 161, 124, 177, 120, 129, 196, 132, 57, 128, 139, 137, 91, 111, 129, 120, 145, 131, 138, 135, 183, 86, 145, 131, 120], [122, 134, 180, 121, 113, 127, 121, 127, 108, 147, 78, 143, 135, 134, 152, 110, 136, 118, 131, 128, 139, 125, 83, 110, 131, 123, 182, 140, 130, 135, 128, 132, 160, 158, 120, 126, 77, 128, 115, 115, 129, 132, 125, 92, 141, 120, 131, 139, 117, 135, 117, 129, 100, 122, 125, 128, 49, 124, 128, 130, 134, 132, 141], [117, 116, 124, 115, 201, 108, 132, 134, 131, 133, 107, 121, 102, 129, 119, 115, 115, 129, 139, 140, 131, 138, 121, 100, 101, 131, 104, 139, 139, 96, 128, 112, 131, 91, 141, 121, 142, 125, 129, 139, 133, 126, 129, 124, 112, 153, 119, 142, 103, 100, 172, 123, 0, 114, 126, 132, 147, 126, 132, 127, 153, 137, 166], [160, 125, 119, 169, 50, 100, 128, 129, 129, 134, 188, 151, 134, 137, 101, 134, 126, 125, 139, 122, 125, 80, 81, 114, 100, 100, 138, 115, 93, 115, 142, 122, 88, 125, 119, 119, 231, 135, 54, 125, 141, 176, 131, 128, 120, 128, 180, 126, 128, 135, 180, 127, 131, 50, 111, 139, 126, 117, 179, 158, 124, 118, 157], [155, 120, 95, 111, 154, 128, 140, 132, 144, 111, 108, 137, 130, 128, 129, 132, 132, 129, 131, 137, 140, 139, 122, 110, 137, 109, 124, 117, 126, 133, 128, 143, 131, 126, 126, 131, 100, 141, 108, 216, 136, 112, 126, 133, 134, 120, 140, 131, 126, 128, 131, 92, 125, 180, 135, 120, 127, 136, 140, 128, 105, 169, 133], [139, 131, 188, 112, 125, 149, 149, 129, 98, 116, 121, 137, 129, 111, 132, 134, 128, 123, 126, 151, 126, 132, 122, 100, 138, 132, 135, 124, 116, 143, 108, 121, 131, 125, 131, 129, 138, 134, 124, 101, 161, 151, 122, 109, 120, 127, 135, 219, 133, 131, 132, 142, 142, 128, 126, 97, 109, 166, 125, 127, 136, 218, 123], [127, 136, 126, 117, 129, 134, 139, 136, 130, 137, 149, 137, 139, 50, 127, 138, 118, 131, 142, 139, 128, 119, 124, 111, 181, 153, 143, 128, 127, 146, 155, 117, 240, 114, 77, 141, 131, 129, 71, 140, 139, 115, 126, 151, 218, 127, 92, 121, 100, 137, 146, 122, 99, 121, 120, 149, 135, 119, 126, 93, 130, 139, 131], [101, 131, 142, 140, 108, 158, 118, 136, 133, 113, 126, 122, 134, 121, 132, 182, 153, 130, 104, 136, 165, 141, 149, 176, 188, 228, 147, 115, 122, 107, 131, 124, 139, 128, 55, 136, 124, 121, 149, 139, 124, 64, 182, 134, 120, 127, 161, 122, 125, 124, 125, 129, 128, 139, 131, 96, 168, 122, 114, 131, 134, 119, 128],
    [126, 139, 130, 127, 131, 128, 127, 130, 125, 110, 95, 115, 116, 158, 129, 125, 126, 112, 130, 110, 140, 128, 150, 131, 81, 125, 181, 124, 113, 130, 126, 124, 127, 119, 136, 126, 135, 132, 127, 139, 123, 149, 129, 154, 125, 133, 126, 128, 126, 120, 125, 130, 127, 137, 219, 161, 141, 135, 90, 123, 137, 131, 120], [88, 112, 143, 172, 138, 128, 134, 132, 125, 115, 120, 128, 125, 125, 144, 126, 134, 119, 124, 205, 131, 124, 121, 151, 127, 136, 119, 137, 158, 122, 123, 132, 133, 141, 111, 114, 95, 127, 137, 127, 103, 123, 144, 128, 129, 115, 62, 124, 145, 130, 139, 180, 149, 92, 132, 102, 116, 179, 134, 125, 131, 116, 146], [216, 124, 136, 131, 134, 142, 134, 130, 124, 119, 156, 132, 110, 183, 158, 131, 121, 133, 119, 124, 133, 119, 78, 127, 98, 175, 105, 109, 135, 142, 109, 129, 124, 146, 58, 117, 135, 126, 81, 125, 134, 134, 112, 169, 100, 89, 153, 131, 92, 205, 129, 131, 141, 78, 142, 203, 124, 107, 137, 131, 125, 101, 162], [153, 86, 130, 128, 138, 124, 105, 137, 139, 130, 157, 149, 138, 134, 127, 129, 120, 120, 142, 160, 130, 130, 133, 133, 135, 126, 115, 130, 134, 130, 134, 132, 128, 93, 62, 122, 120, 128, 118, 125, 133, 126, 129, 118, 131, 124, 121, 155, 133, 78, 114, 126, 115, 125, 144, 131, 126, 131, 119, 120, 146, 117, 136], [115, 134, 130, 181, 73, 132, 127, 134, 120, 133, 125, 90, 157, 130, 114, 129, 169, 125, 135, 142, 120, 138, 143, 134, 144, 133, 124, 142, 140, 117, 108, 126, 124, 130, 136, 146, 132, 112, 129, 135, 183, 114, 125, 133, 126, 124, 121, 119, 93, 126, 129, 132, 114, 166, 130, 132, 117, 137, 136, 144, 139, 139, 92], [122, 149, 138, 96, 126, 164, 128, 117, 115, 130, 101, 105, 127, 129, 114, 131, 130, 124, 125, 134, 161, 146, 108, 98, 104, 152, 112, 123, 125, 131, 122, 131, 129, 125, 85, 159, 62, 148, 115, 140, 139, 122, 136, 130, 139, 155, 152, 118, 139, 122, 92, 164, 134, 120, 134, 92, 126, 143, 127, 151, 119, 124, 131], [124, 130, 136, 136, 136, 135, 136, 105, 172, 128, 124, 116, 128, 124, 137, 130, 131, 152, 126, 128, 183, 137, 146, 116, 130, 105, 131, 159, 127, 124, 122, 142, 114, 90, 143, 136, 110, 121, 128, 125, 145, 109, 121, 132, 78, 132, 124, 116, 118, 124, 131, 120, 127, 143, 129, 187, 149, 139, 127, 135, 236, 133, 138], [107, 155, 139, 153, 162, 102, 144, 133, 140, 117, 121, 139, 92, 124, 151, 129, 197, 131, 172, 130, 135, 149, 128, 137, 141, 132, 169, 126, 132, 188, 121, 128, 107, 140, 118, 126, 142, 116, 100, 128, 120, 71, 114, 218, 137, 126, 124, 130, 127, 119, 122, 128, 114, 134, 126, 151, 112, 221, 127, 124, 117, 111, 125], [130, 106, 165, 135, 137, 121, 178, 128, 167, 130, 169, 132, 127, 134, 141, 126, 121, 131, 126, 160, 126, 139, 62, 130, 142, 130, 122, 101, 155, 126, 195, 75, 122, 119, 170, 124, 134, 139, 136, 179, 112, 103, 116, 125, 127, 158, 125, 132, 111, 132, 126, 135, 116, 153, 137, 149, 166, 121, 102, 136, 104, 124, 181], [138, 136, 128, 134, 129, 121, 132, 157, 111, 141, 134, 122, 121, 105, 122, 196, 132, 133, 114, 113, 126, 112, 138, 127, 128, 122, 136, 125, 131, 149, 131, 126, 114, 138, 99, 149, 191, 100, 131, 141, 215, 157, 129, 133, 122, 171, 134, 132, 115, 145, 124, 169, 85, 134, 128, 123, 127, 123, 119, 131, 115, 96, 134], [116, 113, 125, 54, 124, 137, 131, 136, 126, 109, 121, 130, 131, 121, 136, 92, 132, 126, 62, 136, 138, 137, 137, 125, 139, 134, 102, 145, 119, 118, 166, 28, 111, 133, 132, 63, 137, 124, 97, 145, 141, 128, 128, 144, 153, 178, 142, 62, 121, 139, 109, 121, 126, 122, 126, 115, 113, 136, 86, 126, 105, 120, 156], [119, 137, 138, 111, 131, 132, 137, 137, 124, 133, 129, 137, 100, 142, 148, 153, 135, 119, 134, 131, 117, 142, 130, 173, 132, 131, 104, 151, 107, 116, 116, 121, 129, 132, 135, 132, 129, 128, 146, 120, 113, 137, 143, 115, 130, 139, 131, 125, 125, 100, 92, 141, 126, 135, 130, 141, 118, 145, 131, 127, 129, 141, 109], [128, 134, 127, 136, 130, 90, 131, 151, 90, 126, 143, 129, 131, 130, 124, 137, 126, 125, 115, 128, 127, 132, 134, 113, 152, 79, 124, 122, 124, 131, 122, 106, 132, 129, 130, 124, 124, 131, 124, 116, 134, 183, 113, 125, 121, 120, 127, 132, 122, 125, 112, 112, 119, 125, 135, 110, 136, 128, 121, 133, 78, 68, 137], [124, 143, 133, 104, 111, 142, 172, 114, 188, 125, 137, 127, 166, 125, 130, 148, 137, 118, 116, 145, 128, 85, 126, 73, 124, 115, 93, 138, 132, 114, 112, 170, 114, 183, 115, 149, 121, 128, 135, 105, 129, 145, 132, 129, 111, 121, 95, 125, 139, 129, 54, 124, 161, 135, 108, 133, 125, 127, 133, 182, 129, 128, 134], [203, 136, 116, 130, 150, 123, 121, 126, 120, 120, 103, 130, 131, 146, 189, 126, 131, 121, 129, 124, 129, 130, 136, 114, 170, 125, 145, 152, 123, 93, 141, 138, 135, 214, 209, 86, 123, 149, 127, 112, 137, 140, 121, 131, 109, 131, 119, 132, 142, 122, 139, 131, 106, 129, 126, 134, 167, 104, 123, 111, 122, 113, 116], [115, 151, 105, 107, 125, 90, 130, 131, 131, 123, 131, 132, 119, 92, 122, 136, 126, 130, 139, 132, 126, 95, 121, 102, 115, 136, 110, 135, 119, 120, 123, 134, 101, 128, 157, 105, 217, 115, 119, 136, 108, 131, 120, 112, 115, 137, 139, 124, 130, 124, 131, 131, 130, 143, 132, 137, 147, 131, 119, 131, 124, 185, 136], [113, 100, 123, 133, 127, 127, 121, 101, 129, 104, 100, 122, 133, 121, 123, 120, 135, 125, 125, 122, 116, 135, 138, 138, 130, 134, 170, 125, 136, 127, 128, 128, 141, 134, 133, 126, 117, 122, 131, 127, 109, 139, 125, 128, 119, 141, 127, 125, 123, 182, 114, 103, 85, 109, 118, 136, 135, 130, 114, 128, 116, 78, 122], [141, 121, 129, 170, 131, 127, 129, 131, 125, 126, 167, 125, 124, 126, 133, 137, 132, 136, 125, 166, 94, 127, 119, 108, 127, 116, 140, 146, 126, 160, 130, 94, 103, 129, 125, 131, 103, 134, 151, 130, 125, 131, 134, 121, 131, 119, 131, 126, 130, 125, 132, 142, 85, 131, 127, 135, 149, 160, 98, 120, 125, 133, 128], [128, 95, 134, 153, 121, 127, 105, 132, 138, 131, 125, 130, 135, 131, 88, 131, 121, 129, 138, 91, 124, 125, 136, 126, 129, 136, 130, 130, 218, 128, 134, 116, 124, 132, 170, 126, 136, 172, 127, 114, 132, 141, 104, 129, 176, 136, 141, 108, 128, 162, 121, 122, 113, 125, 126, 130, 124, 138, 120, 143, 134, 111, 115], [126, 172, 129, 115, 130, 116, 120, 116, 135, 121, 136, 119, 120, 118, 49, 129, 120, 133, 166, 148, 112, 138, 129, 104, 128, 133, 131, 121, 121, 118, 108, 126, 130, 103, 136, 129, 167, 101, 114, 153, 120, 190, 128, 131, 114, 133, 119, 100, 133, 134, 129, 113, 175, 136, 129, 135, 131, 182, 120, 123, 129, 118, 108], [216, 195, 134, 125, 130, 126, 124, 124, 135, 105, 135, 107, 127, 128, 125, 132, 128, 112, 117, 131, 120, 132, 128, 112, 175, 132, 120, 123, 130, 101, 129, 114, 126, 140, 135, 124, 72, 157, 128, 121, 176, 113, 143, 174, 141, 140, 134, 151, 126, 179, 130, 136, 124, 153, 139, 122, 112, 136, 115, 135, 188, 126, 131], [128, 132, 129, 139, 142, 165, 172, 130, 181, 139, 134, 188, 124, 146, 156, 119, 75, 131, 122, 129, 209, 126, 136, 138, 155, 103, 139, 125, 137, 218, 121, 134, 149, 124, 101, 136, 131, 124, 195, 134, 109, 116, 138, 122, 124, 137, 128, 153, 125, 131, 120, 92, 51, 124, 196, 143, 127, 101, 89, 143, 128, 131, 107], [124, 218, 116, 133, 136, 121, 130, 120, 129, 111, 121, 202, 136, 138, 129, 145, 130, 112, 122, 130, 136, 139, 110, 94, 119, 120, 137, 131, 125, 124, 85, 123, 108, 138, 121, 128, 129, 129, 132, 161, 124, 177, 120, 129, 196, 132, 57, 128, 139, 137, 91, 111, 129, 120, 145, 131, 138, 135, 183, 86, 145, 131, 120], [122, 134, 180, 121, 113, 127, 121, 127, 108, 147, 78, 143, 135, 134, 152, 110, 136, 118, 131, 128, 139, 125, 83, 110, 131, 123, 182, 140, 130, 135, 128, 132, 160, 158, 120, 126, 77, 128, 115, 115, 129, 132, 125, 92, 141, 120, 131, 139, 117, 135, 117, 129, 100, 122, 125, 128, 49, 124, 128, 130, 134, 132, 141], [117, 116, 124, 115, 201, 108, 132, 134, 131, 133, 107, 121, 102, 129, 119, 115, 115, 129, 139, 140, 131, 138, 121, 100, 101, 131, 104, 139, 139, 96, 128, 112, 131, 91, 141, 121, 142, 125, 129, 139, 133, 126, 129, 124, 112, 153, 119, 142, 103, 100, 172, 123, 0, 114, 126, 132, 147, 126, 132, 127, 153, 137, 166], [160, 125, 119, 169, 50, 100, 128, 129, 129, 134, 188, 151, 134, 137, 101, 134, 126, 125, 139, 122, 125, 80, 81, 114, 100, 100, 138, 115, 93, 115, 142, 122, 88, 125, 119, 119, 231, 135, 54, 125, 141, 176, 131, 128, 120, 128, 180, 126, 128, 135, 180, 127, 131, 50, 111, 139, 126, 117, 179, 158, 124, 118, 157], [155, 120, 95, 111, 154, 128, 140, 132, 144, 111, 108, 137, 130, 128, 129, 132, 132, 129, 131, 137, 140, 139, 122, 110, 137, 109, 124, 117, 126, 133, 128, 143, 131, 126, 126, 131, 100, 141, 108, 216, 136, 112, 126, 133, 134, 120, 140, 131, 126, 128, 131, 92, 125, 180, 135, 120, 127, 136, 140, 128, 105, 169, 133], [139, 131, 188, 112, 125, 149, 149, 129, 98, 116, 121, 137, 129, 111, 132, 134, 128, 123, 126, 151, 126, 132, 122, 100, 138, 132, 135, 124, 116, 143, 108, 121, 131, 125, 131, 129, 138, 134, 124, 101, 161, 151, 122, 109, 120, 127, 135, 219, 133, 131, 132, 142, 142, 128, 126, 97, 109, 166, 125, 127, 136, 218, 123], [127, 136, 126, 117, 129, 134, 139, 136, 130, 137, 149, 137, 139, 50, 127, 138, 118, 131, 142, 139, 128, 119, 124, 111, 181, 153, 143, 128, 127, 146, 155, 117, 240, 114, 77, 141, 131, 129, 71, 140, 139, 115, 126, 151, 218, 127, 92, 121, 100, 137, 146, 122, 99, 121, 120, 149, 135, 119, 126, 93, 130, 139, 131], [101, 131, 142, 140, 108, 158, 118, 136, 133, 113, 126, 122, 134, 121, 132, 182, 153, 130, 104, 136, 165, 141, 149, 176, 188, 228, 147, 115, 122, 107, 131, 124, 139, 128, 55, 136, 124, 121, 149, 139, 124, 64, 182, 134, 120, 127, 161, 122, 125, 124, 125, 129, 128, 139, 131, 96, 168, 122, 114, 131, 134, 119, 128],
    ]

for N_value in NandTvaluesToKvalues:
    if(N_value not in [63]):
        continue
    for K_value in NandTvaluesToKvalues[N_value]:
        if(K_value not in [6]):
            continue

        message_parity_size=N_value
        message_size = NandTvaluesToKvalues[N_value][K_value]

        durations = []
        durations_with_warm = []
        iterations = 60

        distorsion_lst = []
        distorsion2_lst = []

        for pp in range(iterations):
            # values = make_list(63, 256)
            # values = synthesize_from_distribution(63, offset=128)
            # values = synthesize_from_distribution(message_parity_size, offset=128)
            values = samples_lst[pp]
            
            message_bits = convert_to_binary(values, bit_size=8)
            # print('values',values)
        #     # print()
            chunks = messageSliceBasedOnChunkSize(message_bits, chunk_size=message_parity_size)
            
            mutated_chunks = []
            mutated_chunks2 = []
            count=0
            print(pp, 'N_value', N_value, 'K_value', K_value)
            for chunk in chunks:
                
                # print('start chunk process...',count, pp)
                # print('chunk',chunk)

                start_time = time.time()
                mutated_chunk = OptimizedParityFittingWeightsEncodeAndDecode(
                            chunk,
                            message_parity_size=message_parity_size,
                            message_size=message_size,
                            solver='cplex'
                          )
                mutated_chunks.append(mutated_chunk)
                durations_with_warm.append(time.time()-start_time)

                start_time = time.time()
                mutated_chunk2 = OptimizedParityFittingWeightsEncodeAndDecode(
                            chunk,
                            message_parity_size=message_parity_size,
                            message_size=message_size,
                            # warm_start=mutated_chunk["sliced_message_bits"],
                            solver='cpsat'
                        )
                mutated_chunks2.append(mutated_chunk2)
                durations.append(time.time()-start_time)

                # print('end chunk process...',count)
                count+=1
            
            # print('opt1')
            reconstructed_chunks = reconstruct_numbers_from_chunks(mutated_chunks)
            mutated_nums = [reconstructed_chunks[i]['original_number'] for i in range(len(reconstructed_chunks))]
            distorsion = sum([abs(mutated_nums[i]-values[i]) for i in range(len(mutated_nums))])/len(values)
            distorsion_lst.append(distorsion)
            
            # print('opt2')
            reconstructed_chunks2 = reconstruct_numbers_from_chunks(mutated_chunks2)
            mutated_nums2 = [reconstructed_chunks2[i]['original_number'] for i in range(len(reconstructed_chunks2))]
            distorsion2 = sum([abs(mutated_nums2[i]-values[i]) for i in range(len(mutated_nums2))])/len(values)
            distorsion2_lst.append(distorsion2)

        print()
        print('cplex-dist',sum(distorsion_lst)/len(distorsion_lst))
        print('cplex-duration',sum(durations_with_warm)/(message_parity_size*iterations))
        print()
        print('cpsat-dist',sum(distorsion2_lst)/len(distorsion2_lst))
        print('cpsat-duration',sum(durations)/(message_parity_size*iterations))

        distorsionMap[N_value][K_value] = sum([abs(mutated_nums2[i]-values[i]) for i in range(len(mutated_nums2))])/len(values)
        durationsMap[N_value][K_value] = sum(durations)/(message_parity_size*iterations)
        print('finished',N_value, K_value)
        print('----------------------------------------------------------------------------------------------------')

print()
print()
print()
print('distorsionMap',distorsionMap)
print('durationsMap',durationsMap)